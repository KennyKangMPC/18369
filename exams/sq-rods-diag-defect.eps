%!PS-Adobe-3.0 EPSF-3.0%%BoundingBox:  0 0 190 150 %%Title: (midterm08.cvx) %%Creator: Canvas (X.0.2) %%CreationDate: (04/) %%DocumentProcSets: Deneba_CanvasCustomColors%%+ CVDict%%DocumentFonts: %%DocumentNeededFonts: %%DocumentProcessColors: Cyan Magenta Yellow Black%%EndComments%%BeginProlog %%BeginResource: procset CVDict%%Title: Deneba standard graphics%%Version: 1.02%%CreationDate: 10/14/99%%Copyright: (C) 1994, 1999 Deneba Systems. All Rights Reserveduserdict /CVDict 200 dict putCVDict begin/invalidcolortable? true def   /level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse deflevel2 not { /xshow {0 currentpoint 5 -1 roll {pop pop moveto dup 1 add 3 1 roll exch dup 4 1 roll exch get 0 rmoveto currentpoint} exch kshowpop pop pop pop} def } if/initialize{CVDict{dup xcheck{bind}if pop pop}forallcurrentscreen /_sp exch def /_sa exch def /_sf exch def/DefaultScreen{_sf _sa /_sp load}def/DefaultScreenProc{ /_sp load}def/setstrokeadjust where{pop true}{false}ifelse{/sa /setstrokeadjust load def/li /lineto load def/mt /moveto load def/ct /curveto load def/lh { currentpoint exch pop lineto}bind def/lv { currentpoint pop exch lineto}bind def}{/sa{{currentdict StrokeAdjustDict ne{StrokeAdjustDict begin}if}{ currentdict StrokeAdjustDict eq{end}if}ifelse} bind defuserdict /StrokeAdjustDict 100 dict putStrokeAdjustDict begin/_xl{transform.25 sub round .25 add exch.25 sub round .25 add exchitransform}bind def/li{ _xl lineto}bind def/mt{ _xl moveto}bind def/ct{ _xl curveto}bind def/lh { dup _xl pop currentpoint exch pop lineto}bind def/lv { dup _xl pop currentpoint pop exch lineto}bind def/rp{_xl/cv_b xdf/cv_r xdf_xl/cv_t xdf/cv_l xdfcv_l cv_t movetocv_r cv_t linetocv_r cv_b linetocv_l cv_b linetoclosepath}bind defend}ifelse}def/terminate{userdict /StrokeAdjustDict known {currentdict StrokeAdjustDict eq{end}if}ifcurrentdict CVDict eq{end}if}def/mxMax 64 def/mxStk [mxMax {matrix} repeat]def/mxIdx 0 def/stm{mxStk mxIdx 0 lt {/mxIdx 0 store}if mxIdx get currentmatrix pop /mxIdx mxIdx 1 add store}def/rtm{mxIdx 1 ge {/mxIdx mxIdx 1 sub store mxStk mxIdx get setmatrix}if }def/scl { 72 div exch 72 div exch scale } def/scli { 72 exch div exch 72 exch div exch scale } def/_cvmtx matrix def/_txtmtx matrix def/_initmtx matrix def/xdf{exch def}def/min{2 copy gt{exch}if pop}def/max{2 copy lt{exch}if pop}def/CVvec 256 array def/T true def/F false def/_id 0 def/_encodindex 0 def/_encodArr 3 array def/_fd 0 def/_textSave null def/_letterSpace 0 def/_spaceXtra 0 def/_PageSave null def/_penh 1.0 def/_penv 1.0 def/save0 null def/_w 0 def/_h 0 def/_ds 0 def/hct false def/pw 0 def/wdif 0 def/temp 0 def/currot 0 def/savehandler null def/ia 0 def/ix 0 def/ixn 1 def/MultipleDataSources false def /debug{dup /$eps exch not def{/savehandler errordict /handleerror get deferrordict/handleerror{$error beginnewerror{/newerror false defshowpage72 72 scale/Helvetica findfont .2 scalefont setfont.25 9.6 moveto(Error: )showerrorname{dup type/stringtype ne{(converted error name will end up in this string)cvs}ifshow}exec.25 9.4 moveto(Offending Command: )show/command load{dup type/stringtype ne{(converted command name will end up in this string)cvs}ifshow}exec.25 9.2 moveto(Stack: )showostack{.25 currentpoint .2 sub exch pop movetodup type/stringtype ne{dup type/integertype eq1 index type/realtype eq or1 index type/nametype eq ornot {type}if(converted stack will end up in this string)cvs}ifshow}forallshowpageCVDict /savehandler get exec}ifend}put}if}def/lc{setlinecap}def/lj{setlinejoin}def/lm{setmiterlimit}def/lf{setflat}def/cp{closepath}def/np{newpath}def/$psz 30 array def/$pix 0 def/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def/li{lineto} def/lh{currentpoint exch pop lineto}def/lv{currentpoint pop exch lineto}def/mt{moveto} def/_cv_mh{currentpoint exch pop moveto}def/_cv_mv{currentpoint pop exch moveto}def/ct{curveto} def/rt{4 -2 roll movetodup 0 exch rlinetoexch 0 rlinetoneg 0 exch rlinetoclosepath}def/_hr{{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}}def/_cs null def/fg{setgray}def/setcmykcolor where {pop true}{false}ifelse{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse/setcolorspace where {pop true}{false}ifelse{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse/$cc 5 array def/findcmykcustomcolor where {pop true}{false}ifelsenot {/findcmykcustomcolor{$cc astore}def}if/setcustomcolor where {pop true}{false}ifelsenot{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}if/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def/setseparationgray where {pop true}{false}ifelsenot{/setseparationgray {systemdict /setgray get exec} def}if/sg{ setseparationgray}def/sp{/_penv xdf/_penh xdf}def/rp{/cv_b xdf/cv_r xdf/cv_t xdf/cv_l xdfcv_l cv_t movetocv_r cv_t linetocv_r cv_b linetocv_l cv_b linetoclosepath}def/rr{/yradius xdf/xradius xdf/cv_b xdf/cv_r xdf/cv_t xdf/cv_l xdfcv_l xradius add cv_t movetocv_r xradius sub cv_t lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale1 0 1 1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_r cv_b yradius sub lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale0 1 -1 1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_l xradius add cv_b lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale-1 0 -1 -1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_l cv_t yradius add lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale0 -1 1 -1 1 arcto 4{pop}repeat_cvmtx setmatrixclosepath}def/ep{_cvmtx currentmatrix poptranslatescale1 0 moveto0 0 1 0 360 arcclosepath_cvmtx setmatrix}def/wd{_cvmtx currentmatrix poptranslatescale0 0 moveto0 0 1 5 -2 roll arcnclosepath_cvmtx setmatrix}def/as{_cvmtx currentmatrix poptranslatescale0 0 1 5 -2 roll arcn_cvmtx setmatrix}def/ds{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def/df{fill}def/de{eofill}def/_gstk 5 array def/_gstkc 0 def/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def/hs{newpath gsave stm}def/hc{/_hr load exch get exec newpath}def/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq not{aload pop moveto}{pop}ifelse dup /_cf get setfontdup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def/id{ /_id xdf}def/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.% All rights reserved.level2 { save /dontloadlevel1 xdf }if/startnoload{{/noload save def} if}def/endnoload{{noload restore}if }def/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def/ncolors 1 def/colorimage where{pop true}{false}ifelse{/ncolors 0statusdict begin /processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known{pop {deviceinfo /Colors get}}if}if}ifelse end defncolors 0 ne{/colorimage testsystemdict/setcolortransfer testsystemdict/currentcolortransfer testsystemdict/currentcmykcolor testsystemdictand and and not{/ncolors 0 def}if}if}ifncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}ifncolors 1 eq dup dup not startnoload{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] cvx bind settransfer _w _h 8 _imatrix _ds image}def}ifnot endnoloadncolors dup 3 eq exch 4 eq ordup dup not startnoload{/nullproc{{}}def/concatutil{/exec load7 -1 roll /exec load}def/defsubclut{1 add getinterval def}def/spconcattransfer   {/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ldcurrentcolortransfer[{Aclut ncompute}concatutil] cvx[{Bclut ncompute}concatutil] cvx[{Cclut ncompute}concatutil] cvx[{Dclut ncompute}concatutil] cvxsetcolortransfer}def/setuprgbcluts{/bit3x rgbclut length 3 sub def/bit1x bit3x 3 idiv def/rclut rgbclut def/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  endnoload ncolors 3 eq dup dup not startnoload{/3compute{exch bit3x mulround cvi get 255 div}def/doclutimage{%/rgbclut xdf pop setuprgbcluts/3compute rclut gclut bclut dupspconcattransfer _w _h 8 _imatrix[/_ds load /exec load /dup load dup]cvxnullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload{/stuffclut{cmykindex 3 -1 roll put}def/ftoint{1 exch sub 255 mul round cvi}def/4compute { exch bit4x mul round cvi get 255 div } def/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def/cmykclut bit4x 4 add string def/cclut cmykclut def/mclut cclut 1 bit4x defsubclut/yclut cclut 2 bit4x defsubclut/kclut cclut 3 bit4x defsubclut/cmykindex 0 def0 1 bit1x{dup /cmykindex exch bit1x exch sub 4 mul def3 mul dup rclut exch get 255 div exch dup gclut exch get 255 divexch bclut exch get 255 divsetrgbcolor currentcmykcolorftoint kclut stuffclutftoint yclut stuffclutftoint mclut stuffclutftoint cclut stuffclut}for}def/doclutimage{invalidcolortable?{computecmykclut}if/4compute cclut mclut yclut kclut spconcattransfer_w _h 8 _imatrix[/_ds load /exec load/dup load dup dup] cvx nullproc nullproc nullproc true 4 colorimage}def}ifnot endnoloadncolors 0 eqdup dup not startnoload{/colorexpand{mystringexp 0 rgbclut3 copy7 -1 roll{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forallpop pop pop pop pop}def/createexpandstr{/mystringexp exch st0 length mul string def}def/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix[/_ds load /exec load /colorexpand load /exec load] cvxfalse 3 colorimage}def}if not endnoloadlevel2 { dontloadlevel1 restore }iflevel2 not{ save /dontloadlevel2 xdf }if/rgbclut 0 def/doclutimage{/hival 255 def [/Indexed /DeviceRGB hival rgbclut] setcolorspace_imagedict dup begin /Width _w def /Height _h def  /Decode [0 hival] def  /ImageMatrix _imatrix def/BitsPerComponent 8 def /Interpolate true defend image}deflevel2 not{ dontloadlevel2 restore }if%%EndProcSet/_imagedict 15 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate true def currentdict end def/hascolor true def/level2 systemdict /languagelevel known{languagelevel 2 ge}{false}ifelse def/foureq {4 index eq 8 1 roll4 index eq 8 1 roll4 index eq 8 1 roll4 index eq 8 1 rollpop pop pop pop and and and} def/setupbands{gsave/_settransfer systemdict /settransfer get def/_currenttransfer systemdict /currenttransfer get def/_image systemdict /image get def/blank 0 _currenttransfer exec1 _currenttransfer exec eq def/negative blank{0 _currenttransfer exec 0.5 lt}{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def/inverted? negative def/_currentgray systemdict /currentgray get defhascolor{/$b 0 def} {/$b 5 def} ifelse/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub0 1 0 0 setcmykcolor _currentgray 1 exch sub0 0 1 0 setcmykcolor _currentgray 1 exch sub0 0 0 1 setcmykcolor _currentgray 1 exch sub4 {4 copy} repeat1 0 0 0 foureq{/$b 1 store}if0 1 0 0 foureq{/$b 2 store}if0 0 1 0 foureq{/$b 3 store}if0 0 0 1 foureq{/$b 4 store}if0 0 0 0 foureq{/$b 6 store}if}ifblank{/$b 6 store}if$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def/doimage{level2{image}{beginWidth Height BitsPerComponent ImageMatrixDecode length 2 eq{/DataSource load end image}{Decode length 6 eq{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelseMultipleDataSources 3 end DSIColorImage}{Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 getDataSource 2 get DataSource 3 get}{/DataSource load}ifelseMultipleDataSources 4 end DSIColorImage}if}ifelse}ifelse}ifelse}def/dt{/rgbclut xdf /bwclut xdf}def/cl{$i setmatrix translate scale/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get defdoclutimage} def/cd{$i setmatrix translate scalelevel2{_imagedict /ColorSpace get setcolorspace}if/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_imagedict begin/ImageMatrix _imatrix defcurrentdict enddoimage} def/im{$i setmatrix translate scale level2{/DeviceGray setcolorspace 0 setgray}if/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_imagedict begin%/Decode [0 1] def  %/Width _w def%/Height _h def/ImageMatrix _imatrix defcurrentdict end doimage }def/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul addcvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dupst0 exch get .3 mul1 index 1 add st0 exch get .59 mul add1 index 2 add st0 exch get .11 mul add1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if255.0 exch sub cviexch 4 div cvi exchst1 3 1 roll put}for st1}}ifelseimage}def}ifelse/OPIimage{image}def/$i matrix def/bi{scale translate $i currentmatrix pop translate scale setupbands}def/ei{$i setmatrix}def/ik{$i setmatrix translate scale /_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_w _h false _imatrix 5 -1 roll _ds imagemask}def/rs{2 copy translate3 -1 roll neg rotateneg exch neg exch translate}def/cs{_cvmtx astore concat} def/fd{/_fd xdf}def/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def/rf{/_encodindex xdfFontDirectory exch known {findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}foralldup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}{exch pop}ifelse}forall pop}if}ifcurrentdict enddefinefont pop }{pop pop}ifelse} def/cvsf{ findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def/mf{3 -1 roll findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def/wrk1 ( ) def/wdict 16 dict def/Work75 75 string def/Nmk{Work75 cvs dup}def/Npt{put cvn}def/dhOdh{Nmk 2 79 Npt}def/dhBdh{Nmk 2 111 Npt}def/dhSdh{Nmk 2 83 Npt}def/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def/fts{/ftSize exch def}def/mkFT{dup/FontType get 0 eq{dup maxlength dict begin{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forallcurrentdict enddup/FDepVector 2 copy get[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict deftempFT begin/FontMatrix [1 0 0 1 0 0] def/FontType 3 defdup/Encoding get/Encoding exch def/proc2 2 index defdup/ft1 exch def/ft2 1 array def/FontBBox [0 0 1 1] def/BuildChar{CVDict beginexch dup/ftdt xdf beginwdict begin/chr xdf/chrst wrk1 dup 0 chr put defft2 0 get null eq{ft1 dup length 2 add dict begin{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop defcurrentdict end/q exch definefontft2 exch 0 exch put}ifftdt/proc2 get exec end end end}def end tempFT}ifelse3 index exchdefinefont exch pop}def/mb{dup dhBdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{boldproc} exchmkFT pop pop pop exch pop}ifelse }def/mo{dup dhOdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{outproc} exchmkFT pop pop pop exch pop}ifelse }def/ms{dup dhSdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{ShadChar} exchmkFT  pop pop pop exch pop}ifelse }def/outproc{ft1 setfontgsave chrst sfWidth grestoresetcharwidth dblsh}def/boldproc{ft1 setfontgsavechrst sfWidth 1 index 0 ne{exch .05 add exch}ifgrestoresetcharwidthft1 /PaintType get 2 ne{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def/dblsh{currentcolor currentcolorspace 1.0 setgraychrst 0 0 moveto show setcolorspace setcolorft2 0 get setfont chrst 0 0 moveto show}def/ShadChar{ft1 setfontgsavechrst sfWidth 1 index 0 ne{exch .05 add exch}ifgrestoresetcharwidthchrst .06 0 moveto show0 .05 translate dblsh}def/ts{show}def/ta{/_letterSpace xdf/_spaceXtra xdf}def/tf{/_textWidth xdf/_numSpaces xdf/_stringLength xdfdup	stringwidth pop_letterSpace _stringLength 1 sub mul add_spaceXtra _numSpaces mul add_textWidth exch sub /wdif xdf_spaceXtra 0 32wdif _stringLength div_letterSpace add0 6 -1 roll awidthshow}def/pb{/_PageSave save def/showpage{}def}def/pe{_PageSave restore}def/pm{_pm currentmatrix pop}def/_pm matrix def/ps{showpage _pm setmatrix}deflevel2{/ef {gsave 6 array astore concat dup execform grestore}def}{/ef{gsave 6 array astore concat newpath dup begin Matrix concatBBox dup dup 0 get exch 1 get movetodup dup 0 get exch 3 get linetodup dup 2 get exch 3 get linetodup 2 get exch 1 get lineto closepathclip newpath PaintProc end grestore}def}ifelse/bc{save 11 1 roll 10 dict begin /BBox 5 1 roll 4 array astore def/Matrix 7 1 roll 6 array astore def /FormType 1 def/PaintProc{/pp get exec}def}def/ec{pop restore}def/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def/setoverprint where {pop}{/setoverprint{pop}def}ifelse/sstr { /$sstrs exch def /$sstr exch def /$sstry exch def /$sstrx exch def /Courier findfont $sstrs scalefont setfont $sstrx $sstry mt stm 1 -1 scale $sstr show rtm } def/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc	eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}	{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def/DSIEndPaintProc{currentdict end}def/DSIBeginPaintSubProc {save 11 1 roll 10 dict dup /pD exch def begin 	/BBox 5 1 roll 4 array astore def /Matrix 7 1 roll 6 array astore def 	/FormType 1 def /PaintProc { /pp get exec } def /pp} def/DSIEndPaintSubProc {bind def end pD} def/iaa {/ix ix ixn add def} def/ias2 {/igap exch def /_st0 ia ix igap add get def _st0} def/ias {/st0 ia ix get def iaa st0} def/i85s {0 ias2 /ASCII85Decode filter st0 readstring pop iaa} def/irles {0 ias2 /ASCII85Decode filter /RunLengthDecode filter st0 readstring pop iaa} definitializeend%%EndResourceCVDict begin 0 id 1 fd_encodArr 0[39/quotesingle 96/grave128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/bullet/bullet/Ydieresis/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis] put_encodArr 1[39/quotesingle 96/grave128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron] putend%%EndProlog %%BeginSetup CVDict begin/ttn {dup level2 {/Font resourcestatus {pop pop exch}if}{FontDirectory exch known {exch}if}ifelse pop dup dup} def/___FN6 /Palatino-Roman dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {1}{-1} ifelse end} {pop -1} ifelse rf/___FN4 /Symbol dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {2}{-1} ifelse end} {pop -1} ifelse rf/___FN4 /Symbol dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {2}{-1} ifelse end} {pop -1} ifelse rf/___FN1003 /Times-Bold dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {1}{-1} ifelse end} {pop -1} ifelse rf/___FN2003 /Times-Italic dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {1}{-1} ifelse end} {pop -1} ifelse rf/___FN3 /Times-Roman dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {1}{-1} ifelse end} {pop -1} ifelse rf0 id1 fd0 150 translate300 -300 scli%%EndSetup %%BeginPageSetup pm%%EndPageSetup/DeviceCMYK scs0 0 0 1. f40.1250 0.1250 sp 0 lc 2 ljT sa%page rect: 354 230 543 379 hs0 0 787 621 rp 0 hcstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 18.7183 18.7183 epde0.8555 0.0586 0.9492 0.0078 f44.1667 4.1667 sp14.3 lm 0 ljnp16.592 16.592 18.7183 18.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 102.0516 18.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 102.0516 18.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 185.385 18.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 185.385 18.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 268.7183 18.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 268.7183 18.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 352.0516 18.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 352.0516 18.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 435.385 18.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 435.385 18.7183 epdsrtmstm0 0 0 0 f4np16.592 16.592 518.7183 18.7183 epde0.8555 0.0586 0.9492 0.0078 f4np535.3103 18.7183 mt535.224 20.4046 li534.9707 22.0445 li534.5591 23.6295 li533.9978 25.1508 li532.4605 27.9681 li530.7508 30.0366 li511.661 33.6569 mt509.4685 32.4605 li507.009 30.4276 li504.9761 27.9681 li503.4388 25.1508 li503.2965 24.7651 li508.2655 5.9705 mt509.4685 4.9761 li512.2858 3.4388 li513.8071 2.8775 li515.3921 2.4659 li517.032 2.2126 li518.7183 2.1263 li518.7183 2.1263 li519.8397 2.1837 li534.7921 14.7043 mt534.9707 15.3921 li535.224 17.032 li535.3103 18.7183 li535.3103 18.7183 lidsrtmstm0 0 0 0 f4np16.592 16.592 602.0516 18.7183 epde0.8555 0.0586 0.9492 0.0078 f4np618.6437 18.7183 mt618.5573 20.4046 li618.3041 22.0445 li617.8925 23.6295 li617.3311 25.1508 li615.7938 27.9681 li614.0841 30.0366 li594.9944 33.6569 mt592.8018 32.4605 li590.3423 30.4276 li588.3094 27.9681 li586.7721 25.1508 li586.6298 24.7651 li591.5988 5.9705 mt592.8018 4.9761 li595.6192 3.4388 li597.1405 2.8775 li598.7254 2.4659 li600.3653 2.2126 li602.0516 2.1263 li602.0516 2.1263 li603.173 2.1837 li618.1255 14.7043 mt618.3041 15.3921 li618.5573 17.032 li618.6437 18.7183 li618.6437 18.7183 lidsrtmstm0 0 0 0 f4np16.592 16.592 685.385 18.7183 epde0.8555 0.0586 0.9492 0.0078 f4np701.977 18.7183 mt701.8907 20.4046 li701.6374 22.0445 li701.2258 23.6295 li700.6645 25.1508 li699.1271 27.9681 li697.4175 30.0366 li678.3277 33.6569 mt676.1352 32.4605 li673.6756 30.4276 li671.6428 27.9681 li670.1054 25.1508 li669.9632 24.7651 li674.9322 5.9705 mt676.1352 4.9761 li678.9525 3.4388 li680.4738 2.8775 li682.0587 2.4659 li683.6986 2.2126 li685.385 2.1263 li685.385 2.1263 li686.5063 2.1837 li701.4588 14.7043 mt701.6374 15.3921 li701.8907 17.032 li701.977 18.7183 li701.977 18.7183 lidsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 768.7183 18.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 768.7183 18.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 18.7183 102.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 18.7183 102.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 102.0516 102.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 102.0516 102.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 185.385 102.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 185.385 102.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 268.7183 102.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 268.7183 102.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 352.0516 102.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 352.0516 102.0516 epdsrtmstm0 0 0 0 f4np16.592 16.592 435.385 102.0516 epde0.8555 0.0586 0.9492 0.0078 f4np451.977 102.0516 mt451.8907 103.7379 li451.6374 105.3779 li451.2258 106.9628 li450.6645 108.4841 li449.1271 111.3014 li447.4175 113.3699 li428.3277 116.9902 mt426.1352 115.7938 li423.6756 113.7609 li421.6428 111.3014 li420.1054 108.4841 li419.9632 108.0985 li424.9322 89.3038 mt426.1352 88.3094 li428.9525 86.7721 li430.4738 86.2108 li432.0587 85.7992 li433.6986 85.5459 li435.385 85.4596 li435.385 85.4596 li436.5063 85.517 li451.4588 98.0376 mt451.6374 98.7254 li451.8907 100.3653 li451.977 102.0516 li451.977 102.0516 lidsrtmstm0 0 0 0 f4np16.592 16.592 518.7183 102.0516 epde0.8555 0.0586 0.9492 0.0078 f4np535.3103 102.0516 mt535.224 103.7379 li534.9707 105.3779 li534.5591 106.9628 li533.9978 108.4841 li532.4605 111.3014 li530.7508 113.3699 li511.661 116.9902 mt509.4685 115.7938 li507.009 113.7609 li504.9761 111.3014 li503.4388 108.4841 li503.2965 108.0985 li508.2655 89.3038 mt509.4685 88.3094 li512.2858 86.7721 li513.8071 86.2108 li515.3921 85.7992 li517.032 85.5459 li518.7183 85.4596 li518.7183 85.4596 li519.8397 85.517 li534.7921 98.0376 mt534.9707 98.7254 li535.224 100.3653 li535.3103 102.0516 li535.3103 102.0516 lidsrtmstm0 0 0 0 f4np16.592 16.592 602.0516 102.0516 epde0.8555 0.0586 0.9492 0.0078 f4np618.6437 102.0516 mt618.5573 103.7379 li618.3041 105.3779 li617.8925 106.9628 li617.3311 108.4841 li615.7938 111.3014 li614.0841 113.3699 li594.9944 116.9902 mt592.8018 115.7938 li590.3423 113.7609 li588.3094 111.3014 li586.7721 108.4841 li586.6298 108.0985 li591.5988 89.3038 mt592.8018 88.3094 li595.6192 86.7721 li597.1405 86.2108 li598.7254 85.7992 li600.3653 85.5459 li602.0516 85.4596 li602.0516 85.4596 li603.173 85.517 li618.1255 98.0376 mt618.3041 98.7254 li618.5573 100.3653 li618.6437 102.0516 li618.6437 102.0516 lidsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 685.385 102.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 685.385 102.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 768.7183 102.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 768.7183 102.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 18.7183 185.385 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 18.7183 185.385 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 102.0516 185.385 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 102.0516 185.385 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 185.385 185.385 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 185.385 185.385 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 268.7183 185.385 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 268.7183 185.385 epdsrtmstm0 0 0 0 f4np16.592 16.592 352.0516 185.385 epde0.8555 0.0586 0.9492 0.0078 f4np368.6437 185.385 mt368.5573 187.0713 li368.3041 188.7112 li367.8925 190.2961 li367.3311 191.8174 li365.7938 194.6347 li364.0841 196.7032 li344.9944 200.3235 mt342.8018 199.1271 li340.3423 197.0943 li338.3094 194.6347 li336.7721 191.8174 li336.6298 191.4318 li341.5988 172.6371 mt342.8018 171.6428 li345.6192 170.1054 li347.1405 169.5441 li348.7254 169.1325 li350.3653 168.8793 li352.0516 168.7929 li352.0516 168.7929 li353.173 168.8503 li368.1255 181.371 mt368.3041 182.0587 li368.5573 183.6986 li368.6437 185.385 li368.6437 185.385 lidsrtmstm0 0 0 0 f4np16.592 16.592 435.385 185.385 epde0.8555 0.0586 0.9492 0.0078 f4np451.977 185.385 mt451.8907 187.0713 li451.6374 188.7112 li451.2258 190.2961 li450.6645 191.8174 li449.1271 194.6347 li447.4175 196.7032 li428.3277 200.3235 mt426.1352 199.1271 li423.6756 197.0943 li421.6428 194.6347 li420.1054 191.8174 li419.9632 191.4318 li424.9322 172.6371 mt426.1352 171.6428 li428.9525 170.1054 li430.4738 169.5441 li432.0587 169.1325 li433.6986 168.8793 li435.385 168.7929 li435.385 168.7929 li436.5063 168.8503 li451.4588 181.371 mt451.6374 182.0587 li451.8907 183.6986 li451.977 185.385 li451.977 185.385 lidsrtmstm0 0 0 0 f4np16.592 16.592 518.7183 185.385 epde0.8555 0.0586 0.9492 0.0078 f4np535.3103 185.385 mt535.224 187.0713 li534.9707 188.7112 li534.5591 190.2961 li533.9978 191.8174 li532.4605 194.6347 li530.7508 196.7032 li511.661 200.3235 mt509.4685 199.1271 li507.009 197.0943 li504.9761 194.6347 li503.4388 191.8174 li503.2965 191.4318 li508.2655 172.6371 mt509.4685 171.6428 li512.2858 170.1054 li513.8071 169.5441 li515.3921 169.1325 li517.032 168.8793 li518.7183 168.7929 li518.7183 168.7929 li519.8397 168.8503 li534.7921 181.371 mt534.9707 182.0587 li535.224 183.6986 li535.3103 185.385 li535.3103 185.385 lidsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 602.0516 185.385 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 602.0516 185.385 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 685.385 185.385 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 685.385 185.385 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 768.7183 185.385 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 768.7183 185.385 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 18.7183 268.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 18.7183 268.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 102.0516 268.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 102.0516 268.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 185.385 268.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 185.385 268.7183 epdsrtmstm0 0 0 0 f4np16.592 16.592 268.7183 268.7183 epde0.8555 0.0586 0.9492 0.0078 f4np285.3103 268.7183 mt285.224 270.4046 li284.9707 272.0445 li284.5591 273.6295 li283.9978 275.1508 li282.4605 277.9681 li280.7508 280.0366 li261.661 283.6569 mt259.4685 282.4605 li257.009 280.4276 li254.9761 277.9681 li253.4388 275.1508 li253.2965 274.7651 li258.2655 255.9705 mt259.4685 254.9761 li262.2858 253.4388 li263.8071 252.8775 li265.3921 252.4659 li267.032 252.2126 li268.7183 252.1263 li268.7183 252.1263 li269.8397 252.1837 li284.7921 264.7043 mt284.9707 265.3921 li285.224 267.032 li285.3103 268.7183 li285.3103 268.7183 lidsrtmstm0 0 0 0 f4np16.592 16.592 352.0516 268.7183 epde0.8555 0.0586 0.9492 0.0078 f4np368.6437 268.7183 mt368.5573 270.4046 li368.3041 272.0445 li367.8925 273.6295 li367.3311 275.1508 li365.7938 277.9681 li364.0841 280.0366 li344.9944 283.6569 mt342.8018 282.4605 li340.3423 280.4276 li338.3094 277.9681 li336.7721 275.1508 li336.6298 274.7651 li341.5988 255.9705 mt342.8018 254.9761 li345.6192 253.4388 li347.1405 252.8775 li348.7254 252.4659 li350.3653 252.2126 li352.0516 252.1263 li352.0516 252.1263 li353.173 252.1837 li368.1255 264.7043 mt368.3041 265.3921 li368.5573 267.032 li368.6437 268.7183 li368.6437 268.7183 lidsrtmstm0 0 0 0 f4np16.592 16.592 435.385 268.7183 epde0.8555 0.0586 0.9492 0.0078 f4np451.977 268.7183 mt451.8907 270.4046 li451.6374 272.0445 li451.2258 273.6295 li450.6645 275.1508 li449.1271 277.9681 li447.4175 280.0366 li428.3277 283.6569 mt426.1352 282.4605 li423.6756 280.4276 li421.6428 277.9681 li420.1054 275.1508 li419.9632 274.7651 li424.9322 255.9705 mt426.1352 254.9761 li428.9525 253.4388 li430.4738 252.8775 li432.0587 252.4659 li433.6986 252.2126 li435.385 252.1263 li435.385 252.1263 li436.5063 252.1837 li451.4588 264.7043 mt451.6374 265.3921 li451.8907 267.032 li451.977 268.7183 li451.977 268.7183 lidsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 518.7183 268.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 518.7183 268.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 602.0516 268.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 602.0516 268.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 685.385 268.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 685.385 268.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 768.7183 268.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 768.7183 268.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 18.7183 352.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 18.7183 352.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 102.0516 352.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 102.0516 352.0516 epdsrtmstm0 0 0 0 f4np16.592 16.592 185.385 352.0516 epde0.8555 0.0586 0.9492 0.0078 f4np201.977 352.0516 mt201.8907 353.7379 li201.6374 355.3779 li201.2258 356.9628 li200.6645 358.4841 li199.1271 361.3014 li197.4175 363.3699 li178.3277 366.9902 mt176.1352 365.7938 li173.6756 363.7609 li171.6428 361.3014 li170.1054 358.4841 li169.9632 358.0985 li174.9322 339.3038 mt176.1352 338.3094 li178.9525 336.7721 li180.4738 336.2108 li182.0587 335.7992 li183.6986 335.5459 li185.385 335.4596 li185.385 335.4596 li186.5063 335.517 li201.4588 348.0376 mt201.6374 348.7254 li201.8907 350.3653 li201.977 352.0516 li201.977 352.0516 lidsrtmstm0 0 0 0 f4np16.592 16.592 268.7183 352.0516 epde0.8555 0.0586 0.9492 0.0078 f4np285.3103 352.0516 mt285.224 353.7379 li284.9707 355.3779 li284.5591 356.9628 li283.9978 358.4841 li282.4605 361.3014 li280.7508 363.3699 li261.661 366.9902 mt259.4685 365.7938 li257.009 363.7609 li254.9761 361.3014 li253.4388 358.4841 li253.2965 358.0985 li258.2655 339.3038 mt259.4685 338.3094 li262.2858 336.7721 li263.8071 336.2108 li265.3921 335.7992 li267.032 335.5459 li268.7183 335.4596 li268.7183 335.4596 li269.8397 335.517 li284.7921 348.0376 mt284.9707 348.7254 li285.224 350.3653 li285.3103 352.0516 li285.3103 352.0516 lidsrtmstm0 0 0 0 f4np16.592 16.592 352.0516 352.0516 epde0.8555 0.0586 0.9492 0.0078 f4np368.6437 352.0516 mt368.5573 353.7379 li368.3041 355.3779 li367.8925 356.9628 li367.3311 358.4841 li365.7938 361.3014 li364.0841 363.3699 li344.9944 366.9902 mt342.8018 365.7938 li340.3423 363.7609 li338.3094 361.3014 li336.7721 358.4841 li336.6298 358.0985 li341.5988 339.3038 mt342.8018 338.3094 li345.6192 336.7721 li347.1405 336.2108 li348.7254 335.7992 li350.3653 335.5459 li352.0516 335.4596 li352.0516 335.4596 li353.173 335.517 li368.1255 348.0376 mt368.3041 348.7254 li368.5573 350.3653 li368.6437 352.0516 li368.6437 352.0516 lidsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 435.385 352.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 435.385 352.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 518.7183 352.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 518.7183 352.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 602.0516 352.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 602.0516 352.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 685.385 352.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 685.385 352.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 768.7183 352.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 768.7183 352.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 18.7183 435.385 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 18.7183 435.385 epdsrtmstm0 0 0 0 f4np16.592 16.592 102.0516 435.385 epde0.8555 0.0586 0.9492 0.0078 f4np118.6437 435.385 mt118.5573 437.0713 li118.3041 438.7112 li117.8925 440.2961 li117.3311 441.8174 li115.7938 444.6347 li114.0841 446.7032 li94.9944 450.3235 mt92.8018 449.1271 li90.3423 447.0943 li88.3094 444.6347 li86.7721 441.8174 li86.6298 441.4318 li91.5988 422.6371 mt92.8018 421.6428 li95.6192 420.1054 li97.1405 419.5441 li98.7254 419.1325 li100.3653 418.8793 li102.0516 418.7929 li102.0516 418.7929 li103.173 418.8503 li118.1255 431.371 mt118.3041 432.0587 li118.5573 433.6986 li118.6437 435.385 li118.6437 435.385 lidsrtmstm0 0 0 0 f4np16.592 16.592 185.385 435.385 epde0.8555 0.0586 0.9492 0.0078 f4np201.977 435.385 mt201.8907 437.0713 li201.6374 438.7112 li201.2258 440.2961 li200.6645 441.8174 li199.1271 444.6347 li197.4175 446.7032 li178.3277 450.3235 mt176.1352 449.1271 li173.6756 447.0943 li171.6428 444.6347 li170.1054 441.8174 li169.9632 441.4318 li174.9322 422.6371 mt176.1352 421.6428 li178.9525 420.1054 li180.4738 419.5441 li182.0587 419.1325 li183.6986 418.8793 li185.385 418.7929 li185.385 418.7929 li186.5063 418.8503 li201.4588 431.371 mt201.6374 432.0587 li201.8907 433.6986 li201.977 435.385 li201.977 435.385 lidsrtmstm0 0 0 0 f4np16.592 16.592 268.7183 435.385 epde0.8555 0.0586 0.9492 0.0078 f4np285.3103 435.385 mt285.224 437.0713 li284.9707 438.7112 li284.5591 440.2961 li283.9978 441.8174 li282.4605 444.6347 li280.7508 446.7032 li261.661 450.3235 mt259.4685 449.1271 li257.009 447.0943 li254.9761 444.6347 li253.4388 441.8174 li253.2965 441.4318 li258.2655 422.6371 mt259.4685 421.6428 li262.2858 420.1054 li263.8071 419.5441 li265.3921 419.1325 li267.032 418.8793 li268.7183 418.7929 li268.7183 418.7929 li269.8397 418.8503 li284.7921 431.371 mt284.9707 432.0587 li285.224 433.6986 li285.3103 435.385 li285.3103 435.385 lidsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 352.0516 435.385 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 352.0516 435.385 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 435.385 435.385 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 435.385 435.385 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 518.7183 435.385 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 518.7183 435.385 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 602.0516 435.385 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 602.0516 435.385 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 685.385 435.385 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 685.385 435.385 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 768.7183 435.385 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 768.7183 435.385 epdsrtmstm0 0 0 0 f4np16.592 16.592 18.7183 518.7183 epde0.8555 0.0586 0.9492 0.0078 f4np35.3103 518.7183 mt35.224 520.4046 li34.9707 522.0445 li34.5591 523.6295 li33.9978 525.1508 li32.4605 527.9681 li30.7508 530.0366 li11.661 533.6569 mt9.4685 532.4605 li7.009 530.4276 li4.9761 527.9681 li3.4388 525.1508 li3.2965 524.7651 li8.2655 505.9705 mt9.4685 504.9761 li12.2858 503.4388 li13.8071 502.8775 li15.3921 502.4659 li17.032 502.2126 li18.7183 502.1263 li18.7183 502.1263 li19.8397 502.1837 li34.7921 514.7043 mt34.9707 515.3921 li35.224 517.032 li35.3103 518.7183 li35.3103 518.7183 lidsrtmstm0 0 0 0 f4np16.592 16.592 102.0516 518.7183 epde0.8555 0.0586 0.9492 0.0078 f4np118.6437 518.7183 mt118.5573 520.4046 li118.3041 522.0445 li117.8925 523.6295 li117.3311 525.1508 li115.7938 527.9681 li114.0841 530.0366 li94.9944 533.6569 mt92.8018 532.4605 li90.3423 530.4276 li88.3094 527.9681 li86.7721 525.1508 li86.6298 524.7651 li91.5988 505.9705 mt92.8018 504.9761 li95.6192 503.4388 li97.1405 502.8775 li98.7254 502.4659 li100.3653 502.2126 li102.0516 502.1263 li102.0516 502.1263 li103.173 502.1837 li118.1255 514.7043 mt118.3041 515.3921 li118.5573 517.032 li118.6437 518.7183 li118.6437 518.7183 lidsrtmstm0 0 0 0 f4np16.592 16.592 185.385 518.7183 epde0.8555 0.0586 0.9492 0.0078 f4np201.977 518.7183 mt201.8907 520.4046 li201.6374 522.0445 li201.2258 523.6295 li200.6645 525.1508 li199.1271 527.9681 li197.4175 530.0366 li178.3277 533.6569 mt176.1352 532.4605 li173.6756 530.4276 li171.6428 527.9681 li170.1054 525.1508 li169.9632 524.7651 li174.9322 505.9705 mt176.1352 504.9761 li178.9525 503.4388 li180.4738 502.8775 li182.0587 502.4659 li183.6986 502.2126 li185.385 502.1263 li185.385 502.1263 li186.5063 502.1837 li201.4588 514.7043 mt201.6374 515.3921 li201.8907 517.032 li201.977 518.7183 li201.977 518.7183 lidsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 268.7183 518.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 268.7183 518.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 352.0516 518.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 352.0516 518.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 435.385 518.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 435.385 518.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 518.7183 518.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 518.7183 518.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 602.0516 518.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 602.0516 518.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 685.385 518.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 685.385 518.7183 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 768.7183 518.7183 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 768.7183 518.7183 epdsrtmstm0 0 0 0 f4np16.592 16.592 18.7183 602.0516 epde0.8555 0.0586 0.9492 0.0078 f4np35.3103 602.0516 mt35.224 603.7379 li34.9707 605.3779 li34.5591 606.9628 li33.9978 608.4841 li32.4605 611.3014 li30.7508 613.3699 li11.661 616.9902 mt9.4685 615.7938 li7.009 613.7609 li4.9761 611.3014 li3.4388 608.4841 li3.2965 608.0985 li8.2655 589.3038 mt9.4685 588.3094 li12.2858 586.7721 li13.8071 586.2108 li15.3921 585.7992 li17.032 585.5459 li18.7183 585.4596 li18.7183 585.4596 li19.8397 585.517 li34.7921 598.0376 mt34.9707 598.7254 li35.224 600.3653 li35.3103 602.0516 li35.3103 602.0516 lidsrtmstm0 0 0 0 f4np16.592 16.592 102.0516 602.0516 epde0.8555 0.0586 0.9492 0.0078 f4np118.6437 602.0516 mt118.5573 603.7379 li118.3041 605.3779 li117.8925 606.9628 li117.3311 608.4841 li115.7938 611.3014 li114.0841 613.3699 li94.9944 616.9902 mt92.8018 615.7938 li90.3423 613.7609 li88.3094 611.3014 li86.7721 608.4841 li86.6298 608.0985 li91.5988 589.3038 mt92.8018 588.3094 li95.6192 586.7721 li97.1405 586.2108 li98.7254 585.7992 li100.3653 585.5459 li102.0516 585.4596 li102.0516 585.4596 li103.173 585.517 li118.1255 598.0376 mt118.3041 598.7254 li118.5573 600.3653 li118.6437 602.0516 li118.6437 602.0516 lidsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 185.385 602.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 185.385 602.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 268.7183 602.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 268.7183 602.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 352.0516 602.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 352.0516 602.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 435.385 602.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 435.385 602.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 518.7183 602.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 518.7183 602.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 602.0516 602.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 602.0516 602.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 685.385 602.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 685.385 602.0516 epdsrtmstm0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 768.7183 602.0516 epde0.8555 0.0586 0.9492 0.0078 f4np16.592 16.592 768.7183 602.0516 epdsrtmheterminate